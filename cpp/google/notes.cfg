# Notes
uint32_t is used when you must have a 32 bit unsigned. int or unsigned int for general purposes 
when you don't need a guaranteed size and unsigned only if you can ensure that you won't have negative numbers.

https://www.geeksforgeeks.org/how-to-convert-a-vector-to-set-in-c/

https://rmbconsulting.us/publications/a-c-test-the-0x10-best-questions-for-would-be-embedded-programmers/

# Any difference?

class Solution {
private:
 
public:
    bool containsDuplicate(vector<int>& nums) {

        set<int> s1;
        set<int> s2;

        
        for(auto i: nums){
            s1.insert(i);            
        }




        for(auto &i: nums){
            s2.insert(i);            
        }

        cout << "one" << endl;
        for(auto i: s1){
            cout << "i: " << i << endl;
        }

        cout << "two" << endl;
        for(auto i: s2){
            cout << "i: " << i << endl;
        }

        cout << "s1.size() : " << s1.size() << endl;  
        cout << "s2.size() : " << s2.size() << endl;  
        cout << "nums.size() : " << nums.size() << endl;  

        return 0;

    }
};


s is string.
difference btw std::strlen(s) and s.size()?


/*
auto it = std::find(vec1.begin(), vec1.end(), 5);

auto it1 = std::find(vec1.begin(), vec1.end(), 10);

if( it1 != vec1.end() ){
    std::cout << "HELLO" << std::endl;
    std::cout << it1 << std::endl; // why not working?
}
*/

#define SECONDS_PER_YEAR (60UL * 60UL * 24UL * 365UL)
#define MIN(A,B) ((A) <= (B) ? (A) : (B))

https://www.geeksforgeeks.org/function-pointer-in-c/